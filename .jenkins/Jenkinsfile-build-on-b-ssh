    stage('Build & Push on Instance B') {
      steps {
        script {
          if (params.LOGIN_BEFORE_PUSH) {
            // With Docker Hub login
            withCredentials([
              sshUserPrivateKey(credentialsId: 'ec2b-ssh', keyFileVariable: 'KEYFILE'),
              usernamePassword(credentialsId: 'dockerhub-satya', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')
            ]) {
              sh '''
                set -euo pipefail
                SSH_OPTS="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
                REMOTE="${B_USER}@${B_HOST}"

                # --- BUILD on Instance B ---
                ssh $SSH_OPTS -i "$KEYFILE" "$REMOTE" \
                  REGISTRY=''''${REGISTRY}''' IMAGE_REPO=''''${IMAGE_REPO}''' IMAGE_TAG=''''${IMAGE_TAG}''' \
                  'bash -s' <<'BUILD_EOF'
                set -euo pipefail
                cd ~/jenkins-ctx
                rm -rf ctx && mkdir ctx
                tar -xzf build-context.tgz -C ctx
                cd ctx
                docker --version
                docker build -f docker/Dockerfile -t "${REGISTRY}/${IMAGE_REPO}:${IMAGE_TAG}" .
BUILD_EOF

                # --- LOGIN & PUSH from Instance B ---
                # NOTE: we pass DOCKER_USER/DOCKER_PASS as env to the remote bash; here-doc is single-quoted so nothing expands locally
                ssh $SSH_OPTS -i "$KEYFILE" "$REMOTE" \
                  REGISTRY=''''${REGISTRY}''' IMAGE_REPO=''''${IMAGE_REPO}''' IMAGE_TAG=''''${IMAGE_TAG}''' \
                  DOCKER_USER="${DOCKER_USER}" DOCKER_PASS="${DOCKER_PASS}" \
                  'bash -s' <<'PUSH_EOF'
                set -euo pipefail
                echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin "$REGISTRY"
                docker push "${REGISTRY}/${IMAGE_REPO}:${IMAGE_TAG}"
                docker logout "$REGISTRY" || true
PUSH_EOF
              '''
            }
          } else {
            // Without Docker Hub login (public repo or already logged in)
            withCredentials([sshUserPrivateKey(credentialsId: 'ec2b-ssh', keyFileVariable: 'KEYFILE')]) {
              sh '''
                set -euo pipefail
                SSH_OPTS="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
                REMOTE="${B_USER}@${B_HOST}"

                # --- BUILD on Instance B ---
                ssh $SSH_OPTS -i "$KEYFILE" "$REMOTE" \
                  REGISTRY=''''${REGISTRY}''' IMAGE_REPO=''''${IMAGE_REPO}''' IMAGE_TAG=''''${IMAGE_TAG}''' \
                  'bash -s' <<'BUILD_EOF'
                set -euo pipefail
                cd ~/jenkins-ctx
                rm -rf ctx && mkdir ctx
                tar -xzf build-context.tgz -C ctx
                cd ctx
                docker --version
                docker build -f docker/Dockerfile -t "${REGISTRY}/${IMAGE_REPO}:${IMAGE_TAG}" .
BUILD_EOF

                # --- PUSH from Instance B (no login) ---
                ssh $SSH_OPTS -i "$KEYFILE" "$REMOTE" \
                  REGISTRY=''''${REGISTRY}''' IMAGE_REPO=''''${IMAGE_REPO}''' IMAGE_TAG=''''${IMAGE_TAG}''' \
                  'bash -s' <<'PUSH_EOF'
                set -euo pipefail
                docker push "${REGISTRY}/${IMAGE_REPO}:${IMAGE_TAG}"
PUSH_EOF
              '''
            }
          }
        }
      }
    }

